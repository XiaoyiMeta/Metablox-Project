// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// DidVerifiableCredentialDao is the data access object for table did_verifiable_credential.
type DidVerifiableCredentialDao struct {
	table   string                         // table is the underlying table name of the DAO.
	group   string                         // group is the database configuration group name of current DAO.
	columns DidVerifiableCredentialColumns // columns contains all the column names of Table for convenient usage.
}

// DidVerifiableCredentialColumns defines and stores column names for table did_verifiable_credential.
type DidVerifiableCredentialColumns struct {
	Id                string //
	ChainId           string //
	Context           string //
	Name              string //
	Type              string //
	Issuer            string //
	Holder            string //
	CredentialSubject string //
	IssuanceDate      string //
	ExpirationDate    string //
	RevokedAt         string //
	Proof             string //
	RawText           string //
	CreatedAt         string //
	UpdatedAt         string //
	DeletedAt         string //
	Description       string //
}

// didVerifiableCredentialColumns holds the columns for table did_verifiable_credential.
var didVerifiableCredentialColumns = DidVerifiableCredentialColumns{
	Id:                "id",
	ChainId:           "chain_id",
	Context:           "context",
	Name:              "name",
	Type:              "type",
	Issuer:            "issuer",
	Holder:            "holder",
	CredentialSubject: "credential_subject",
	IssuanceDate:      "issuance_date",
	ExpirationDate:    "expiration_date",
	RevokedAt:         "revoked_at",
	Proof:             "proof",
	RawText:           "raw_text",
	CreatedAt:         "created_at",
	UpdatedAt:         "updated_at",
	DeletedAt:         "deleted_at",
	Description:       "description",
}

// NewDidVerifiableCredentialDao creates and returns a new DAO object for table data access.
func NewDidVerifiableCredentialDao() *DidVerifiableCredentialDao {
	return &DidVerifiableCredentialDao{
		group:   "default",
		table:   "did_verifiable_credential",
		columns: didVerifiableCredentialColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *DidVerifiableCredentialDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *DidVerifiableCredentialDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *DidVerifiableCredentialDao) Columns() DidVerifiableCredentialColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *DidVerifiableCredentialDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *DidVerifiableCredentialDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *DidVerifiableCredentialDao) Transaction(ctx context.Context, f func(ctx context.Context, tx gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
